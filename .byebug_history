exit
destination
lodgment
exit
continue
lodgment
exit
lodgment.destination.title['es']
exit
continue
destination.lodgments
destination
continue
@lodgment.type_rooms.first
@lodgment.type_rooms
@lodgment.type_rooms = params[:lodgment][:type_rooms].split(',').map(&:to_i)
@lodgment.type_rooms
@lodgment.type_rooms = params[:lodgment][:type_rooms]
params[:lodgment][:type_rooms]
continue
@lodgment.type_rooms = "sadas"
@lodgment
@logdment
params[:lodgment][:type_rooms]
continue
params[:lodgment][:type_rooms]
params[:lodgment]
params[:type_rooms]
params
continue
@lodment.destination
exit
continue
lodgment.destination_ids
lodgment
continue
@price_total
continue
@reservation['round_trip']
@price_total
continue
object['round_trip'] == 'true' ? price.to_f*2 : price.to_f
price.to_f*2
object['round_trip']
object
price
locality
continue
locality
exit
locality
continue
locality
exit
locality
continue
locality
exit
continue
locality
exit
locality
continue
@reservationable
@reservationable.set_price
@reservationable
exit
continue
params[:origin_location]
params[:round_trip]
continue
params[:origin_location]
params[:round_trip]
params
continue
params[:round_trip]
params
@round_trip
continue
locality[0] === locality[0]
locality[0]
locality[0] != locality[1]
locality[0] == locality[0]
currency
locality
exit
locality
continue
@locality
continue
params[:origin_locality]
params[:arrival_locality]
continue
params[:arrival_locality]
params[:origin_locality]
continue
params[:circuit][:destination_ids].split(',').map(&:to_i)
@circuit.destination_ids
@circuit.update(destination_ids: params[:circuit][:destination_ids])
@circuit.update(circuit_params)
params[:circuit][:destination_ids].split(',').map(&:to_i)
params[:circuit][:destination_ids]
params
continue
params
exit
continue
self.reservations.with_deleted.first.reservationable
self.reservations.with_deleted.first
self.reservations.with_deleted
type
exit
self.reservations.with_deleted
type
tpy
exit
type
continue
self.class.to_s.split('::').last
self.class.to_s.split('::').last.
self
exit
self
continue
exit
current_user.reservations.vehicles
current_user.reservations.type_order
current_user.reservations
current_user.reservations.count
continue
session[:reservation]
exit
session[:reservation]
continue
@adults                = params[:quantity_adults].to_i
@adults                = params[:adults].to_i
params
continue
params
continue
exit
params
exit
session[:invoice]
session[:user]
session[:travellers]
session[:reservation]
continue
current_user.reservations.first.reservationable
current_user.reservations.first.with_delete.reservationable
current_user.reservations.first.reservationable
current_user.reservations.first
current_user.reservations.count
current_user.reservations
params
continue
session[:reservation]
session[:reservation]['seats']
~session[:reservation]['seats']
continue
contine
@kids.to_i
@adults.to_i
@adults
@tour.price_kids
@tour.price_adults
@tour
continue
continu
continue
params
continue
@reservation.reservationable
@reservation
@reservationable
continue
@user
@reservation.valid?
@reservation
params
continue
@reservationable['type']
@reservationable[:type]
@reservationable
session[:reservationable]
session[:user]
exit
session[:reservationable]
@reservationable
continue
session[:reservationable]
sessions[:reservationable]
continue
session.delete(:reservationable)
session.delete(:travellers)
session.delete(:reservation)
session[:reservationable]
@reservationable.class
@reservationable
continue
params[:reservationable_type]
@render = params[:reservationable_type].downcase.pluralize
params
continue
params
continue
params
continue
session.delete(:invoice)
session.delete(:tour)
session.delete(:vehicle)
session.delete(:user)
session.delete(:travellers)
session[:reservation]
session.delete(:reservation)
params[:travellers]
params
params[:user]
params[:user]
session[:travellers]
session[:invoice]
session[:user]
session[:tour]
session[:reservation]
continue
"app/front/reservations/#{@render}/index"
@render
continue
params[:reservationable_type].downcase.pluralize
params[:reservationable_type].downcase
params[:reservationable_type].upcase
params[:reservationable_type]
params
continue
@flight_origin_picker
@kids
@adults
@results
@result
@currency
@lang
continue
@results
continue
@vehicle.kit['quantity']
@vehicle.kit
@vehicle
exit
@tour.activity
@tour.description
@tour.name
@tour
@tourname
@tour
@tour.activity
@tour
