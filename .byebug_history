continue
ApplicationMailer.testing.deliver_now
ApplicationMailer.testing
ContactMailer.client_contact
~~
continue
KepplerTravel::ReservationMailer.send_password(@user)
ApplicationMailer.testing
ContactMailer.client_contact
continue
ApplicationMailer.testing
KepplerTravel::ReservationMailer.send_password(@user)
ApplicationMailer.testing
continue
KepplerTravel::ReservationMailer.send_password(@user)
ApplicationMailer.testing
continue
KepplerTravel::ReservationMailer.send_password(@user)
ApplicationMailer.testing
continue
ApplicationMailer.testing
KepplerTravel::ReservationMailer.send_password(@user)
@user
continue@user
continue
KepplerTravel::ReservationMailer.send_password(@user)
continue
ApplicationMailer.testing
KepplerTravel::ReservationMailer.send_password(@user)
continue
params
continue
current_user.nil?
current_user
continue
@user.format_accessable_passwd(@user.password)
user[:password]
@user.format_accessable_passwd(user[:password])
@user = User.create!(name: user[:name], email: user[:email], password: Devise.friendly_token.first(8))
@user = User.create!(name: user[:name], email: user[:email], password: Devise.friendly_token.first(6))
@user = User.create(name: user[:name], email: user[:email], password: Devise.friendly_token.first(6))
            @user = User.create(email: user[:email], password: Devise.friendly_token.first(6), confirmed_at: DateTime.now)
@user
continue
a
a = 3 if @user
a = 2 if @user
a = 2 unless @user
a
a = 0 unless @user
@user
@user = User.find_by(email: user[:email])
user[:email]
user
exit
params
continue
params['user']['email']
params['user']
params['user''email']
params['user'email']
params[:user].to_a['email']
params[:user].to_a
params[:user].to_a.first.first
params[:user].to_a.first
params[:user].to_a
params[:user].to_h
params[:user].to_hash
params[:user].to_has
params[:user]
params
params['email']
params[:user]['email']
params[:user]
params[:user].first.first
params[:user].first
params[:user].second
params[:user]
params[:user][]['email']
params[:user]['email']
params[:user][:email]
params[:user]
user = User.find_by(email: params[:user][:email])
@reservation
params[:user]
params
continue
traveller[:name]
@reservation
@reservation.id
traveller[:dni]
traveller[:name]
traveller
continue
params
continue
params[:travellers]
params[:travellers].each{|trave|}
params[:travellers].count
params[:travellers]
params
exit
params
continue
params
continue
params[:flight_origin_picker]
continue
params
continue
@price
exit
@subtotal
continue
"2 x #{transfer.title[lang]} -> 2 x #{transfer.price[currency]}"
@subtotal
exit
@subtotal
continue
subtotal
exit
subtotal
continue
a = 0 if params[:round_trip]
params[:round_trip]
continue
@round_trip
@roud_trip
continue
params[:round_trip]
continue
params
continue
params[:radio]
params
continue
@seats = @adults.to_i + @kids.to_i
@seats
continue
params
continue
params
continue
params
continue
reservation_params
params_reservation
params_reservations
params[:origin]
params
continue
params[:arr_name]
continue
params[:arr_name]
params
continue
@arrival = [params[:arrival_transfer],params[:arrival_hidden]]
params[:arrival_transfer]@arrival = [params[:arrival_transfer],params[:arrival_hidden]]
params[:arrival_transfer]
params[:arrival]
params[:arrival_hidden]
params
exit
params
exit
params
continue
params[:q].to_param.first
params[:q].to_param
params[:q].first
params[:q][:arrival_hidden]
params[:q]
params
exit
exi
exxit
params
params[:q]
continue
params
continue
@q
continue
params
continue
params
continue
params
continue
params
~~~param
continue
cotninue
continue
exit
User.new.reservations
User.last.reservations
User.last
@user.
exit
User.last.keppler_travel_reservations
User.last.reservations
User.last
User.las
User.new
@user
continue
@transfer
continue
controller_name
action_name
action_name_
continue
@q
@q.result
@q
continue
f.error :latitude
f.error
f.error :latitude
continue
cotninue
continue
@lang
@currency
request.query_parameters
request.query_parameters.merge(lang: lang).to_param
request.original_url.sub(/\?.*$/, '')
request.url
request
lang
continue
params[:transfer][:files].count
continue
imgs[6]
imgs[5]
imgs[4]
imgs[3]
imgs[2]
imgs[1]
imgs[0]
imgs.count
imgs
continue
params[:transfer][:files].count
params
continue
params[:transfer][:files].count
params
continue
params[:transfer][:files].count
continue
params[:transfer][:files].count
continue
params[:transfer][:files].count
continue
