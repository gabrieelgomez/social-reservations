continue
@price
exit
@subtotal
continue
"2 x #{transfer.title[lang]} -> 2 x #{transfer.price[currency]}"
@subtotal
exit
@subtotal
continue
subtotal
exit
subtotal
continue
a = 0 if params[:round_trip]
params[:round_trip]
continue
@round_trip
@roud_trip
continue
params[:round_trip]
continue
params
continue
params[:radio]
params
continue
@seats = @adults.to_i + @kids.to_i
@seats
continue
params
continue
params
continue
params
continue
reservation_params
params_reservation
params_reservations
params[:origin]
params
continue
params[:arr_name]
continue
params[:arr_name]
params
continue
@arrival = [params[:arrival_transfer],params[:arrival_hidden]]
params[:arrival_transfer]@arrival = [params[:arrival_transfer],params[:arrival_hidden]]
params[:arrival_transfer]
params[:arrival]
params[:arrival_hidden]
params
exit
params
exit
params
continue
params[:q].to_param.first
params[:q].to_param
params[:q].first
params[:q][:arrival_hidden]
params[:q]
params
exit
exi
exxit
params
params[:q]
continue
params
continue
@q
continue
params
continue
params
continue
params
continue
params
~~~param
continue
cotninue
continue
exit
User.new.reservations
User.last.reservations
User.last
@user.
exit
User.last.keppler_travel_reservations
User.last.reservations
User.last
User.las
User.new
@user
continue
@transfer
continue
controller_name
action_name
action_name_
continue
@q
@q.result
@q
continue
f.error :latitude
f.error
f.error :latitude
continue
cotninue
continue
@lang
@currency
request.query_parameters
request.query_parameters.merge(lang: lang).to_param
request.original_url.sub(/\?.*$/, '')
request.url
request
lang
continue
params[:transfer][:files].count
continue
imgs[6]
imgs[5]
imgs[4]
imgs[3]
imgs[2]
imgs[1]
imgs[0]
imgs.count
imgs
continue
params[:transfer][:files].count
params
continue
params[:transfer][:files].count
params
continue
params[:transfer][:files].count
continue
params[:transfer][:files].count
continue
params[:transfer][:files].count
continue
params[:transfer][:files]
params[:transfer][:files].count
params[:transfer][:files]
params[:transfer]
params
exit
exi
params
continue
@transfer.files.count
@transfer.files = params[:transfer][:files]
@transfer.files = params[:transfer]
@transfer.files.count
@transfer.files
@transfer.update_files(files: nil)
params[:transfer]
params[:transfer][:files]
params[:transfer]
params[:files]
params
continue
@transfer.galery.count
@transfer.galery
continue
request.url.split('?').last
request.url.split('?')
request.url
continue
array
array.third.replace(@currency)
array
array = request.path.split('/')
array
continue
array.drop(2)
array
array.drop(1)
array
array.second.replace('jelu')
array
array = request.path.split('/')
array
array = request.path
request.path
request.path.split('/').third.replace('hola')
request.path.split('/').second
request.path.split('/')
request.path.split('')
request.path
request.url.
url
current_page?
current_path
request.path
continue
request.path
continue
request.protocol + request.host_with_port
request.path
request.path.split('/')
request.path.split('/').split("")
request.path.split('/').split()
request.path.split('/')
request.path.split
request.path
request.url
request.path
request.patg
params.path
params
request.url
request.env['PATH_INFO']
continue
@locale
continue
KepplerTravel::Transfer.ransack(quantity_adults_gteq: adults).result
adults
KepplerTravel::Transfer.ransack(quantity_adults_lteq: adults).result
KepplerTravel::Transfer.ransack(quantity_adults_lteq: adults.to_i).result
KepplerTravel::Transfer.ransack(destinations_id_in: destinations).result.first
KepplerTravel::Transfer.ransack(destinations_id_in: destinations).result.first.title
KepplerTravel::Transfer.ransack(destinations_id_in: destinations).result.title
KepplerTravel::Transfer.ransack(destinations_id_in: destinations)
adults
destinations
KepplerTravel::Destination.find(destinations).transfers
KepplerTravel::Destination.find(destinations)
kids
adults
destinations
exit
kids
params
continue
KepplerTravel::Transfer.ransack(destinations_id_in: destinations)
KepplerTravel::Transfer.ransack(quantity_adults_lteq: adults.to_i).result
KepplerTravel::Transfer.all.map(&:quantity_kids)
KepplerTravel::Transfer.all.map(&:quantity_adults)
KepplerTravel::Transfer.count
destinations
KepplerTravel::Transfer.all.map(&:quantity_adults)
adults
KepplerTravel::Transfer.ransack(quantity_adults_lteq: adults.to_i).result
adults
continue
adults
continue
adults
KepplerTravel::Transfer.ransack(destinations_id_in: destinations).result
