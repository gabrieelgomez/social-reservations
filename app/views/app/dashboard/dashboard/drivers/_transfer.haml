%section.content-header
  %h1
    Órdenes de Reserva
    -#%small Traslados
%section.content
  .row
    .col-xs-12
      .box
        .box-header
          %h3.box-title Traslados
          .box-tools
            .input-group.input-group-sm{:style => "width: 150px;"}
              %input.form-control.pull-right{:name => "table_search", :placeholder => "Buscar", :type => "text"}/
              .input-group-btn
                %button.btn.btn-default{:type => "submit"}
                  %i.fa.fa-search
        .box-body.table-responsive.no-padding
          %table.table.table-hover
            %tbody
              %tr.items-orders
                %th Estatus
                %th N° Orden
                %th N° Factura
                %th Estatus
                %th Vehiculo
                %th Origen
                %th Destino
                %th Responsable
                %th Pasajeros
                %th Cant. Adultos
                %th Cant. Niños

              - @orders.map(&:reservation).each do |reservation|
                %tr
                  = simple_form_for reservation.order, url: user_update_path, method: :post do |f|
                    %td
                      -#= f.input :status, as: :boolean, label: false
                      %label.switch
                        %input.js_drive{:type => "checkbox"}/
                        %span.slider.round

                  %td= reservation.id
                  %td= reservation.invoice.token
                  %td{style:"text-align: center;"}
                    %span.label{class: reservation.invoice.status_class?}= reservation.invoice.status

                  %td= reservation.reservationable.title[@lang]
                  %td= truncate(reservation.origin, :length => 25)
                  %td= truncate(reservation.arrival, :length => 25)
                  %td= reservation.user.name.titleize
                  %td= reservation.travellers.count
                  %td= reservation.quantity_adults
                  %td= reservation.quantity_kids
:scss

  .switch {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 20px;
  }

  .switch input { 
  opacity: 0;
  width: 0;
  height: 0;
  }

  .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 20px;
    width: 20px;
    left: 1px;
    bottom: 0px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
  }

  input:checked + .slider {
  background-color: #2196F3;
  }

  input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
  }

  input:checked + .slider:before {
  -webkit-transform: translateX(18px);
  -ms-transform: translateX(18px);
  transform: translateX(18px);
  }

  /* Rounded sliders */
  .slider.round {
  border-radius: 34px;
  }

  .slider.round:before {
  border-radius: 50%;
  }

:javascript

  $(".js_drive").on( 'change', function() {
    if( $(this).is(':checked') ) {
        alert("Ha completado el traslado");
    } else {
        alert("No ha completado el traslado");
    }
  });