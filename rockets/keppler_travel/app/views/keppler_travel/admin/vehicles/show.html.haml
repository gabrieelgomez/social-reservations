.container
  .row
    .col-lg-2
      = link_to admin_travel_vehicles_path, class: "", "data-position" => "bottom", "data-tooltip" => t("keppler.actions.back") do
        .arrow-back.btn.btn-default
          %i.fa.fa-angle-left
          = t('keppler.actions.back')

  .show-section
    .row
      .col-lg-5
        - @vehicle.as_json(only: ["cover"]).each do |attribute, value|
          .box.slice-box
            .box-header.with-border
              %h3.box-title= attribute.capitalize
              .box-tools.pull-right
                %a.btn.btn-box-tool{"data-widget" => "collapse", type: "button"}
                  %i.fa.fa-minus
            .box-body.box-body-no-padding
              - unless value.url.blank?
                = image_tag value.url, class: 'img-show'
      .col-lg-7
        .box.slice-box
          .box-header.with-border
            %h3.box-title= t("keppler.modules.#{controller_path.underscore}")
            .box-tools.pull-right
              = link_to edit_admin_travel_vehicle_path(@vehicle), class: "btn btn-box-tool", title: "#{t('keppler.actions.edit') }" do
                %i.icon-pencil
              = link_to admin_travel_vehicle_path(@vehicle), class: "btn btn-box-tool", title: "#{t('keppler.actions.delete')}", method: :delete, data: { confirm: t("keppler.messages.data_confirm") } do
                %i.icon-trash
              %a.btn.btn-box-tool{"data-widget" => "collapse", type: "button"}
                %i.fa.fa-minus
          .box-body.box-body-no-padding
            %table.table.table-striped
              %tbody
                -# - @vehicle.as_json(only: "inner_price", "outer_price"]).each do |attribute, value|

                %tr.list-row
                  %th.display-label Título Español
                  %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.title['es'].blank? ? '-----------' : @vehicle.title['es']

                %tr.list-row
                  %th.display-label Título Inglés
                  %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.title['en'].blank? ? '-----------' : @vehicle.title['en']

                %tr.list-row
                  %th.display-label Título Portugués
                  %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.title['pt'].blank? ? '-----------' : @vehicle.title['pt']

                %tr.list-row
                  %th.display-label= t("activerecord.attributes.destinations")
                  %td.display-value.fs-body-1.tc-black-2
                    = @vehicle.destination_ids.blank? ? '-----------' : @vehicle.destinations.collect{|des| des.custom_title['es']}.uniq.join(', ')

                %tr.list-row
                  %th.display-label Cantidad máx. de Asientos
                  %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.seat.blank? ? '-----------' : @vehicle.seat

                %tr.list-row
                  %th.display-label Peso máx. de equipaje
                  %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.kit.blank? ? '-----------' : @vehicle.kit['weight']

                %tr.list-row
                  %th.display-label Piezas máx. de equipaje
                  %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.kit.blank? ? '-----------' : @vehicle.kit['quantity']

                -# %tr.list-row
                -#   %th.display-label Precio Dentro Perímetro COP
                -#   %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.inner_price.blank? ? '-----------' : @vehicle.inner_price['cop']
                -#
                -# %tr.list-row
                -#   %th.display-label Precio Dentro Perímetro USD
                -#   %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.inner_price.blank? ? '-----------' : @vehicle.inner_price['usd']
                -#
                -# %tr.list-row
                -#   %th.display-label Precio Fuera Perímetro COP
                -#   %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.outer_price.blank? ? '-----------' : @vehicle.outer_price['cop']
                -#
                -# %tr.list-row
                -#   %th.display-label Precio Fuera Perímetro USD
                -#   %td.display-value.fs-body-1.tc-black-2.text-overflow= @vehicle.outer_price.blank? ? '-----------' : @vehicle.outer_price['usd']

      .col-md-12
        .box.slice-box
          .box-header.with-border
            %h3.box-title Precio por destinos
            .box-tools.pull-right
              - if can?(KepplerTravel::Multidestination).update?
                = link_to admin_travel_vehicle_prices_tables_path(@vehicle), class: "btn btn-box-tool", title: "#{t('keppler.actions.edit') }" do
                  %i.icon-pencil

          .nav-tabs-custom
            %ul.nav.nav-tabs
              %li.active
                %a{"data-toggle" => "tab", :href => "#usd"} USD
              %li
                %a{"data-toggle" => "tab", :href => "#cop"} COP
            .tab-content{style: 'padding:inherit!important;margin-bottom:10px;'}

              // USD
              #usd.tab-pane.active
                .box-body
                  %table.table.table-hover
                    %tr
                      %th
                      %th Destino
                      %th Precio Dentro USD
                      %th Precio Fuera USD

                    // Multidestinationables from Multidestination
                    - @vehicle.vehicleables.sort_by{|price| price.id }.each do |vehicleable|
                      - destination = vehicleable.destination
                      - vehicle = vehicleable.vehicle
                      %tr
                        %td
                          - if vehicleable.status
                            %i.icon-check
                          - else
                            %i.icon-close
                        %td= destination.custom_title['es']
                        %td= number_to_currency(vehicleable.price_inner_usd, locale: @locale)
                        %td= number_to_currency(vehicleable.price_outer_usd, locale: @locale)


              // COP
              #cop.tab-pane
                .box-body
                  %table.table.table-hover
                    %tr
                      %th
                      %th Destino
                      %th Precio Dentro COP
                      %th Precio Fuera COP
                    // Multidestinationables from Multidestination
                    - @vehicle.vehicleables.sort_by{|price| price.id }.each do |vehicleable|
                      - destination = vehicleable.destination
                      - vehicle = vehicleable.vehicle
                      %tr
                        %td
                          - if vehicleable.status
                            %i.icon-check
                          - else
                            %i.icon-close
                        %td= destination.custom_title['es']
                        %td= number_to_currency(vehicleable.price_inner_cop, locale: @locale)
                        %td= number_to_currency(vehicleable.price_outer_cop, locale: @locale)
                        -# %td= number_to_currency(vehicleable.price_cop, locale: @locale)
