= simple_form_for [:admin, :travel, @destination] do |f|
  .container
    .row
      .col-lg-2
        = link_to admin_travel_destinations_path, class: "", "data-position" => "bottom", "data-tooltip" => t("keppler.actions.back") do
          .arrow-back.btn.btn-default
            %i.fa.fa-angle-left
            = t('keppler.actions.back')

    .row
      .col-lg-12
        .box.slice-box
          .box-header.with-border
            %h3.box-title= t("keppler.modules.#{action_name.underscore}")
            .box-tools.pull-right
              %a.btn.btn-box-tool{"data-widget" => "collapse", :type => "button"}
                %i.fa.fa-minus
          .box-body
            %table.table.table-bordered
              %tbody
                .form-padding
                  .col-xs-12.col-lg-6
                    .col-xs-12.col-lg-12
                      = f.input :title, label: 'Dirección', placeholder: '¡Escribe un lugar de Colombia!'

                    // Latitud
                    .col-xs-12.col-lg-12
                      .keppler-custom-field.form-group.string.required.disabled.destination_lang
                        %label.control-label.string.required.disabled{:for => "destination_lang"}
                          %abbr{:title => "requerido"} *
                          Latitud
                      %input#destination_lang.form-control.string.required.disabled{:disabled => "disabled",:type => "text"}
                      = f.hidden_field :latitude

                    // Longitude
                    .col-xs-12.col-lg-12
                      .keppler-custom-field.form-group.string.required.disabled.destination_lang
                        %label.control-label.string.required.disabled{:for => "destination_lang"}
                          %abbr{:title => "requerido"} *
                          Longitude
                      %input#destination_long.form-control.string.required.disabled{:disabled => "disabled",:type => "text"}
                      = f.hidden_field :longitude

                  .col-xs-12.col-lg-6#gmap{style: 'width: 400px; height: 400px;'}
                    -# = f.input :position, as: :hidden
                  .col-xs-12
                    = f.input :deleted_at, as: :hidden
                  .col-xs-12
                    .pull-left
                      = f.button :submit, t('keppler.actions.save'), name: '_save', class: 'btn-primary'
                      = f.button :submit, t('keppler.actions.save_and_add_another'), name: '_add_other'

%script{:src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyDt6Fm4Tge8PJpUNhByW314XyvQGJRpDFc&sensor=false&libraries=places", :type => "text/javascript"}

:javascript

  var map;
  var marker = [];
  var lantitude_edit = #{raw @destination.try(:latitude) || 4.710988599}
  var longitude_edit = #{raw @destination.try(:longitude) || -74.072092}

  function initialize() {

    var myLatlng = new google.maps.LatLng(lantitude_edit, longitude_edit);
    var options = {
      zoom:5,
      center: myLatlng,
      types: ['(cities)'],
      componentRestrictions: {country: "col"},
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    map = new google.maps.Map(document.getElementById("gmap"), options);
    marker = new google.maps.Marker({
      position: new google.maps.LatLng(lantitude_edit, longitude_edit),
      map: map
    });


    var input = document.getElementById('destination_title');
    var autocomplete = new google.maps.places.Autocomplete(input, options);

    autocomplete.addListener('place_changed', onPlaceChanged);

    // When the user selects a city on input search, get the place details for the city and
    // zoom the map in on the city.
    function onPlaceChanged() {
      var place = autocomplete.getPlace();
      var latitude = place.geometry.location.lat();
      var longitude = place.geometry.location.lng();
      console.log('Latitude', latitude);
      console.log('Longitude', longitude);

      $("#destination_lang").val(latitude);
      $("input[name='destination[latitude]']").val(latitude);

      // $("input[name='destination[latitude]']").attr("value", parseFloat(latitude));
      $("#destination_long").val(longitude);
      $("input[name='destination[longitude]']").val(longitude);

      // $("input[name='destination[longitude]']").attr("value", parseFloat(longitude));
       // $('form').append(`<input type="hidden" name="destination[latitude]" value="${latitude}" /> `);
       // $('form').append(`<input type="hidden" name="destination[longitude]" value="${longitude}" /> `);

      if (place.geometry) {
        map.panTo(place.geometry.location);
        map.setZoom(12);
         marker = new google.maps.Marker({
          position: new google.maps.LatLng(latitude,longitude),
          map: map
        });
      } else {
        document.getElementById('autocomplete').placeholder = 'Enter a city';
      }

    }

  }

  google.maps.event.addDomListener(window, 'load', initialize);


:scss
  #destination_latitude, #destination_longitude{
    cursor: not-allowed;
    background-color: #eeeeee;
    opacity: 1;
   }
