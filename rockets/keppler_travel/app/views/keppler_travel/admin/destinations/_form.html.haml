= simple_form_for [:admin, :travel, @destination] do |f|
  .container
    .row
      .col-lg-2
        = link_to admin_travel_destinations_path, class: "", "data-position" => "bottom", "data-tooltip" => t("keppler.actions.back") do
          .arrow-back.btn.btn-default
            %i.fa.fa-angle-left
            = t('keppler.actions.back')

    .row
      .col-lg-12
        .box.slice-box
          .box-header.with-border
            %h3.box-title= t("keppler.modules.#{action_name.underscore}")
            .box-tools.pull-right
              %a.btn.btn-box-tool{"data-widget" => "collapse", :type => "button"}
                %i.fa.fa-minus
          .box-body
            %table.table.table-bordered
              %tbody
                .form-padding
                  .col-xs-12
                    -# = f.input :title
                    = f.input :title, :placeholder => 'Start typing a place name...'
                  -# .col-xs-12
                  -#   = f.input :cover, as: :keppler_file, label: false
                  -# .col-xs-12
                  -#   = f.input :description
                  .col-xs-12
                    = f.input :position, as: :hidden
                  .col-xs-12
                    = f.input :deleted_at, as: :hidden
                  .col-xs-12
                    .pull-right
                      = f.button :submit, t('keppler.actions.save'), name: '_save', class: 'btn-primary'
                      = f.button :submit, t('keppler.actions.save_and_add_another'), name: '_add_other'



  %script{:src => "https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"}
  :javascript
    function initialize() {

     var options = {
      types: ['(cities)'],
      componentRestrictions: {country: "col"}
     };

      var input = document.getElementById('destination_title');
      var autocomplete = new google.maps.places.Autocomplete(input, options);
      google.maps.event.addListener(autocomplete, 'place_changed', function () {
          var place = autocomplete.getPlace();
          console.log('Latitude', place.geometry.location.lat());
          console.log('Longitude', place.geometry.location.lng());
          // document.getElementById('city2').value = place.name;
          // document.getElementById('cityLat').value = place.geometry.location.lat();
          // document.getElementById('cityLng').value = place.geometry.location.lng();

      });
    }

    google.maps.event.addDomListener(window, 'load', initialize);
